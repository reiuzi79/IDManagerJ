/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package idmanager;

import EntityAndMethod.Data;
import EntityAndMethod.Method;
import idmanagerBLL.MainBLL;
import javax.swing.JOptionPane;
import javax.swing.table.*;

/**
 *
 * @author s7995
 */
public class MainFrame extends javax.swing.JFrame {

    String nickname = "";
    String account = "";
    MainBLL bll = null;
    String IP = Method.getInternetIp();
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }
    public MainFrame(String account, String nickname) {
        initComponents();
        this.nickname = nickname;
        if (!nickname.equals("管理员")) {
            current.setText("当前用户为" + nickname + "，是普通用户");
        } else {
            current.setText("当前用户为" + nickname + "，是超级管理员");
            Table.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{
                        {null, null, null, null, null, null, null, null, null, null}
                    },
                    new String[]{
                        "姓名", "电话", "地址", "身份证号", "地区", "生日", "年龄", "性别", "备注", "添加者"
                    }
            ));
            jScrollPane1.setViewportView(Table);
            if (Table.getColumnModel().getColumnCount() > 0) {
                Table.getColumnModel().getColumn(0).setPreferredWidth(30);
                Table.getColumnModel().getColumn(1).setPreferredWidth(70);
                Table.getColumnModel().getColumn(2).setPreferredWidth(300);
                Table.getColumnModel().getColumn(3).setPreferredWidth(125);
                Table.getColumnModel().getColumn(4).setPreferredWidth(150);
                Table.getColumnModel().getColumn(5).setPreferredWidth(70);
                Table.getColumnModel().getColumn(6).setPreferredWidth(20);
                Table.getColumnModel().getColumn(7).setPreferredWidth(20);
                Table.getColumnModel().getColumn(8).setPreferredWidth(200);
                Table.getColumnModel().getColumn(9).setPreferredWidth(50);
            }
        }
        this.account = account;
        bll = new MainBLL(account);
        this.setAlwaysOnTop(true);
        this.setAlwaysOnTop(false);
        try {
            setTableModel(bll.refresh(account));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "程序出现错误，错误信息：" + ex.getMessage(), "错误", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();
        select = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        count = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        current = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("身份证管理系统0.99J");
        setAutoRequestFocus(false);
        setMaximumSize(new java.awt.Dimension(1366, 760));
        setMinimumSize(new java.awt.Dimension(1366, 760));
        setPreferredSize(new java.awt.Dimension(1366, 760));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "姓名", "电话", "地址", "身份证号", "地区", "生日", "年龄", "性别", "备注"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);
        if (Table.getColumnModel().getColumnCount() > 0) {
            Table.getColumnModel().getColumn(0).setPreferredWidth(30);
            Table.getColumnModel().getColumn(1).setPreferredWidth(70);
            Table.getColumnModel().getColumn(2).setPreferredWidth(300);
            Table.getColumnModel().getColumn(3).setPreferredWidth(125);
            Table.getColumnModel().getColumn(4).setPreferredWidth(150);
            Table.getColumnModel().getColumn(5).setPreferredWidth(70);
            Table.getColumnModel().getColumn(6).setPreferredWidth(20);
            Table.getColumnModel().getColumn(7).setPreferredWidth(20);
            Table.getColumnModel().getColumn(8).setPreferredWidth(250);
        }

        add.setText("添加");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        delete.setText("删除");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        update.setText("更改");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        select.setText("查询");
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });

        refresh.setText("刷新");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        count.setText("count");

        jLabel1.setText("身份证管理系统0.99J");

        current.setText("当前用户");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(current)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(count)
                                .addGap(66, 66, 66)))
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(add)
                        .addGap(18, 18, 18)
                        .addComponent(delete)
                        .addGap(18, 18, 18)
                        .addComponent(update)
                        .addGap(18, 18, 18)
                        .addComponent(select)
                        .addGap(18, 18, 18)
                        .addComponent(refresh)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1326, Short.MAX_VALUE)
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(count)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(delete)
                    .addComponent(update)
                    .addComponent(select)
                    .addComponent(refresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(current))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(this, "确定退出？", "？", JOptionPane.YES_NO_OPTION) == 0){
            try{
                bll.exit();
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "退出时出现错误，强制退出。错误信息：" + e.getMessage(), "错误", JOptionPane.ERROR_MESSAGE);
                System.exit(0);
            }
            System.exit(0);
        }
        return;
    }//GEN-LAST:event_formWindowClosing

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        offlineDetect();
        try{
            setTableModel(bll.refresh(account));
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "刷新错误，错误信息：" + ex.getMessage(), "错误", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_refreshActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        offlineDetect();
        AddFrame af = new AddFrame(account);
        af.setModal(true);
        af.setLocationRelativeTo(null);
        af.setVisible(true);
        try{
            setTableModel(bll.refresh(account));
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "程序出现错误，错误信息：" + ex.getMessage(), "错误", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        offlineDetect();
        DeleteFrame df = new DeleteFrame(account);
        df.setModal(true);
        df.setLocationRelativeTo(null);
        df.setVisible(true);
        try {
            setTableModel(bll.refresh(account));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "程序出现错误，错误信息：" + ex.getMessage(), "错误", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        offlineDetect();
        Data data;
        String author;
        String updateID = JOptionPane.showInputDialog("输入要更改的身份证号");
        if(updateID == null || updateID.equals("")) return;
        updateID = updateID.toUpperCase();
        if(account.equals("admin")){
            author = JOptionPane.showInputDialog("输入要更改的身份证号的添加者");
            if(author == null || author.equals("")) return;
        }else author = account;
        try{
            data = bll.preUpdate(updateID, author);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "更改错误，错误信息：" + e.getMessage(), "错误", JOptionPane.ERROR_MESSAGE);
            return;
        }
        UpdateFrame uf = new UpdateFrame(data, author);
        uf.setModal(true);
        uf.setLocationRelativeTo(null);
        uf.setVisible(true);
        try {
            setTableModel(bll.refresh(account));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "程序出现错误，错误信息：" + ex.getMessage(), "错误", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed
        // TODO add your handling code here:
        offlineDetect();
        SelectFrame sf = new SelectFrame(account, this);
        sf.setModal(true);
        sf.setLocationRelativeTo(null);
        sf.setVisible(true);
    }//GEN-LAST:event_selectActionPerformed

    public void setTableModel(Object[][] datas){   //对象数组转换为defaulttablemodel
        
        DefaultTableModel model = (DefaultTableModel)Table.getModel();
        model.setRowCount(0);
        if(datas != null){
            for(Object[] o : datas){
                model.addRow(o);
            }
        }
        count.setText("共有" + model.getRowCount() + "条记录");
        Table.setRowSorter(new TableRowSorter(Table.getModel()));
        
    }
    
    private void offlineDetect(){
        
        try{
            if(!bll.detect(IP)){
                JOptionPane.showMessageDialog(this, "您已经离线！", "错误", JOptionPane.ERROR_MESSAGE);
                System.exit(0);
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "程序出现错误，错误信息：" + ex, "错误", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton add;
    private javax.swing.JLabel count;
    private javax.swing.JLabel current;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refresh;
    private javax.swing.JButton select;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
